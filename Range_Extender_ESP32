#include <WiFi.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Wire.h>

// OLED display width and height (128x64 for typical displays)
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

// I2C pins for ESP32-C3
#define OLED_SDA 21
#define OLED_SCL 20

// Create an SSD1306 display object connected to I2C
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

// Wi-Fi credentials
const char* ssid = "Main_Router_SSID";          // Main router SSID
const char* password = "Main_Router_Password";  // Main router password

const char* ap_ssid = "Extender_SSID";          // Extender SSID
const char* ap_password = "Extender_Password";  // Extender password

void setup() {
  Serial.begin(115200);
  Wire.begin(OLED_SDA, OLED_SCL);

  // Initialize OLED display
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);  // Don't proceed, loop forever
  }

  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);

  // Display initializing message
  display.setCursor(0, 0);
  display.println("WiFi Extender");
  display.println("Connecting to router...");
  display.display();

  // Connect to the main router (STA mode)
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    display.setCursor(0, 20);
    display.print(".");
    display.display();
  }

  // Connected to main router
  display.clearDisplay();
  display.setCursor(0, 0);
  display.println("Connected to router!");
  display.setCursor(0, 10);
  display.print("IP: ");
  display.println(WiFi.localIP());
  display.display();
  Serial.println("Connected to main router!");

  // Start Access Point (AP mode)
  WiFi.softAP(ap_ssid, ap_password);
  display.setCursor(0, 30);
  display.println("AP Started:");
  display.print("AP IP: ");
  display.println(WiFi.softAPIP());
  display.display();
  Serial.println("Access Point started!");

  // Display signal strength (RSSI)
  display.setCursor(0, 50);
  display.print("Signal Strength: ");
  display.print(WiFi.RSSI());
  display.println(" dBm");
  display.display();
}

void loop() {
  // Update signal strength periodically
  display.setCursor(0, 50);
  display.fillRect(0, 50, SCREEN_WIDTH, 10, SSD1306_BLACK);  // Clear previous RSSI value
  display.setCursor(0, 50);
  display.print("Signal Strength: ");
  display.print(WiFi.RSSI());
  display.println(" dBm");
  display.display();
  
  delay(5000);  // Update every 5 seconds
}
